{
    "collab_server" : "",
    "contents" : "suppressPackageStartupMessages(require(scater))\nsuppressPackageStartupMessages(require(SingleCellExperiment))\nsuppressPackageStartupMessages(require(workflowscriptscommon))\nsuppressPackageStartupMessages(require(optparse))\n\nsetwd(\"/Users/ethering/projects/single_cell/Galaxy/galaxy_tools/data\")\n\nreads <- read.table('Expression_matrix.txt', sep = \"\\t\", header = TRUE)\nanno <- read.table('annotation.txt', sep = \"\\t\", header = TRUE)\nmts <- readLines(\"Mt_Pt_groups.txt\", warn=TRUE)\n\ncontrol <- readLines(\"empty_control_cells.txt\", warn=TRUE)\n\n\nreads_sce <- SingleCellExperiment(assays = list(counts = as.matrix(reads)), colData = anno)\nsce <- calculateQCMetrics(reads_sce, feature_controls = list(MT = mts), cell_controls = list(empty = control))\ntotal_counts <- sce$total_counts\ntotal_features <- sce$total_features\ncount_feats <- cbind(total_counts, total_features)\ntotal_counts\ntotal_features\ncf_dm <- as.data.frame(count_feats)\n\nplot <- ggplot(cf_dm, aes(x=total_counts/1e6, y=total_features)) + geom_point(shape=1) + geom_smooth() + xlab(\"Read count (millions)\") + \n  ylab(\"Gene count\") + ggtitle(\"Scatterplot of reads vs genes\")\n\n#calculate binwidths for reads and features plots\nread_bins <- max(total_counts/1e6)/20\nfeat_bins <- max(total_features)/20\n#make the plots\nplot1 <- qplot(total_counts/1e6, geom=\"histogram\", binwidth = read_bins, ylab=\"Number of cells\", xlab = \"Read counts (millions)\", fill=I(\"darkseagreen3\"))\nplot2 <- qplot(total_features, geom=\"histogram\", binwidth = feat_bins, ylab=\"Number of cells\", xlab = \"Feature counts\", fill=I(\"darkseagreen3\"))\nplot3 <- plotColData(sce, y=\"pct_counts_MT\", x=\"total_features_by_counts\") + ggtitle(\"% MT genes\")\n#arrange them all together\nlibrary(ggpubr)\n\nfinal_plot <- ggarrange(plot1, plot2, plot, plot3, ncol=2, nrow=2)\nfinal_plot\n\n\n\n\nnorm_sce <- normalize(sce)\nplotExplanatoryVariables(norm_sce, variables = c(colnames(colData(norm_sce))))\n#   \"total_features_by_counts\",\n#   \"total_counts\",\n#   \"pct_counts_in_top_50_features\",\n#   \"cell_number\",\n#   \"letter\",\n#   \"number\"\n# ))\n\n\n#PCA Filter\nsce <- calculateQCMetrics(reads_sce, feature_controls = list(MT = mts), cell_controls = list(empty = control))\nsce <- runPCA(sce, use_coldata = TRUE, detect_outliers = TRUE, return_sce = TRUE)\nsce$use <- !sce$outlier\ntable(sce$use)\nsce <- sce[, colData(sce)$use]\nsummary(sce)\n\ntotal_counts <- sce$total_counts\ntotal_features <- sce$total_features\ncount_feats <- cbind(total_counts, total_features)\ncf_dm <- as.data.frame(count_feats)\n\nplot <- ggplot(cf_dm, aes(x=total_counts/1e6, y=total_features)) + geom_point(shape=1) + geom_smooth() + xlab(\"Read count (millions)\") + \n  ylab(\"Gene count\") + ggtitle(\"Scatterplot of reads vs genes\")\n\n#calculate binwidths for reads and features plots\nread_bins <- max(total_counts/1e6)/20\nfeat_bins <- max(total_features)/20\n#make the plots\nplot1 <- qplot(total_counts/1e6, geom=\"histogram\", binwidth = read_bins, ylab=\"Number of cells\", xlab = \"Read counts (millions)\", fill=I(\"darkseagreen3\"))\nplot2 <- qplot(total_features, geom=\"histogram\", binwidth = feat_bins, ylab=\"Number of cells\", xlab = \"Feature counts\", fill=I(\"darkseagreen3\"))\n\n#arrange them all together\nlibrary(ggpubr)\n\nfinal_plot <- ggarrange(ggarrange(plot1, plot2, ncol=2),plot, nrow=2)\nfinal_plot\n\n\n#Normalise\nnorm_sce <- normalize(sce)\n\n\n#Manual filter\nsce <- calculateQCMetrics(reads_sce, feature_controls = list(MT = mts), cell_controls = list(empty = control))\nnrow(counts(sce))\n## Filter out unexpressed features\ngene_expressed <- nexprs(sce, detection_limit = 4, byrow=TRUE) > 0\nman_sce <- sce[gene_expressed, ]\nnrow(counts(man_sce))\nncol(man_sce)\n\n\nman_sce$use <- man_sce$total_counts > 1000\ntable(man_sce$use)\nman_sce <- man_sce[, colData(man_sce)$use]\nnrow(counts(man_sce))\nncol(man_sce)\n\n\n\ntable(man_sce$use)\n\nman_sce$use <- man_sce$pct_counts_MT < 25\nman_sce <- man_sce[, colData(man_sce)$use]\ntable(man_sce$use)\n\n\n\n\npdf(\"~/projects/single_cell/Galaxy/galaxy_tools/data/exprs_vs_mean.pdf\")\nplotExprsFreqVsMean(sce)\ndev.off()\n\n\n#Tung data\nanno <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/tung/annotation.txt\", sep = \"\\t\", header=TRUE)\nreads <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/tung/reads.txt\", sep = \"\\t\", header=TRUE)\nmt <- readLines(\"~/projects/single_cell/Galaxy/galaxy_tools/data/tung/mt.txt\")\nreads_sce <- SingleCellExperiment(assays = list(counts = as.matrix(reads)), colData = anno)\n# feature_expressed <- nexprs(sce, detection_limit = 4, byrow=TRUE) > 4\n# sce <- sce[feature_expressed, ]\nsce <- calculateQCMetrics(reads_sce,feature_controls = list(MT=mt))\n\nfeature_expressed <- nexprs(sce, detection_limit = 4, byrow=TRUE) > 4\nsce <- sce[feature_expressed, ]\n\nsce$use <- sce$total_counts > 10000\nsce <- sce[, colData(sce)$use]\n\nsce$use <- sce$pct_counts_MT < 15\nsce <- sce[, colData(sce)$use]\n\n\n\n\n#Scater inbuit data\nanno <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_anno.txt\", sep = \"\\t\", header=TRUE)\nreads <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_counts.txt\", sep = \"\\t\", header=TRUE)\nmt <- readLines(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_mt.txt\")\nreads_sce <- SingleCellExperiment(assays = list(counts = as.matrix(reads)), colData = anno)\nsce <- calculateQCMetrics(reads_sce,feature_controls = list(MT=mt))\n\n#Auto filter\nsce <- runPCA(sce, use_coldata = TRUE, detect_outliers = TRUE, return_sce = TRUE)\nsce$use <- !sce$outlier\ntable(sce$use)\nsce <- sce[, colData(sce)$use]\nsummary(sce)\n\n#Plot\ntotal_counts <- sce$total_counts\ntotal_features <- sce$total_features\ncount_feats <- cbind(total_counts, total_features)\ncf_dm <- as.data.frame(count_feats)\n\nplot <- ggplot(cf_dm, aes(x=total_counts/1e6, y=total_features)) + geom_point(shape=1) + geom_smooth() + xlab(\"Read count (millions)\") + \n  ylab(\"Gene count\") + ggtitle(\"Scatterplot of reads vs genes\")\n\n#calculate binwidths for reads and features plots\nread_bins <- max(total_counts/1e6)/20\nfeat_bins <- max(total_features)/20\n#make the plots\nplot1 <- qplot(total_counts/1e6, geom=\"histogram\", binwidth = read_bins, ylab=\"Number of cells\", xlab = \"Read counts (millions)\", fill=I(\"darkseagreen3\"))\nplot2 <- qplot(total_features, geom=\"histogram\", binwidth = feat_bins, ylab=\"Number of cells\", xlab = \"Feature counts\", fill=I(\"darkseagreen3\"))\nplot3 <- plotColData(sce, y=\"pct_counts_MT\", x=\"total_features_by_counts\") + ggtitle(\"% MT genes\")\n\n#arrange them all together\nlibrary(ggpubr)\n\nfinal_plot <- ggarrange(plot1, plot2, plot, plot3, ncol=2, nrow=2)\nfinal_plot\n\n#Manual filter\n\nanno <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_anno.txt\", sep = \"\\t\", header=TRUE)\nreads <- read.table(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_counts.txt\", sep = \"\\t\", header=TRUE)\nmt <- readLines(\"~/projects/single_cell/Galaxy/galaxy_tools/data/scater_inbuilt/scater_mt.txt\")\nreads_sce <- SingleCellExperiment(assays = list(counts = as.matrix(reads)), colData = anno)\nsce <- calculateQCMetrics(reads_sce,feature_controls = list(MT=mt))\nnrow(counts(sce))\n\n## Filter out unexpressed features\ngene_expressed <- nexprs(sce, detection_limit = 10, byrow=TRUE) > 0\nman_sce <- sce[gene_expressed, ]\nnrow(counts(man_sce))\nncol(man_sce)\n\n\nman_sce$use <- man_sce$total_counts > 1000\ntable(man_sce$use)\nman_sce <- man_sce[, colData(man_sce)$use]\nnrow(counts(man_sce))\nncol(man_sce)\n\n\n\ntable(man_sce$use)\n\nman_sce$use <- man_sce$pct_counts_MT < 33\nman_sce <- man_sce[, colData(man_sce)$use]\ntable(man_sce$use)\n\n\n#Plot\ntotal_counts <- man_sce$total_counts\ntotal_features <- man_sce$total_features\ncount_feats <- cbind(total_counts, total_features)\ncf_dm <- as.data.frame(count_feats)\n\nplot <- ggplot(cf_dm, aes(x=total_counts/1e6, y=total_features)) + geom_point(shape=1) + geom_smooth() + xlab(\"Read count (millions)\") + \n  ylab(\"Gene count\") + ggtitle(\"Scatterplot of reads vs genes\")\n\n#calculate binwidths for reads and features plots\nread_bins <- max(total_counts/1e6)/20\nfeat_bins <- max(total_features)/20\n#make the plots\nplot1 <- qplot(total_counts/1e6, geom=\"histogram\", binwidth = read_bins, ylab=\"Number of cells\", xlab = \"Read counts (millions)\", fill=I(\"darkseagreen3\"))\nplot2 <- qplot(total_features, geom=\"histogram\", binwidth = feat_bins, ylab=\"Number of cells\", xlab = \"Feature counts\", fill=I(\"darkseagreen3\"))\nplot3 <- plotColData(sce, y=\"pct_counts_MT\", x=\"total_features_by_counts\") + ggtitle(\"% MT genes\")\n\n#arrange them all together\nlibrary(ggpubr)\n\nfinal_plot <- ggarrange(plot1, plot2, plot, plot3, ncol=2, nrow=2)\nfinal_plot\n\n",
    "created" : 1539075709499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "599308818",
    "id" : "A9C6DD08",
    "lastKnownWriteTime" : 1539337941,
    "last_content_update" : 1539337941697,
    "path" : "~/projects/single_cell/Galaxy/galaxy_tools/RCode/test_scater/scater_modules_1.8.4/Test_code.R",
    "project_path" : "Test_code.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}